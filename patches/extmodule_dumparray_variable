Description: Added "dumparray" "setlocal" variable
Author: vir@ctm.ru
---
If this variable is set, ARRAY responses will be converted into tab-separated text, allowing external scripts to process database query responses.
Index: yate/modules/extmodule.cpp
===================================================================
--- yate.orig/modules/extmodule.cpp	2016-01-15 15:53:53.000000000 +0300
+++ yate/modules/extmodule.cpp	2016-01-15 15:53:53.000000000 +0300
@@ -210,6 +210,7 @@
 class ExtModReceiver : public MessageReceiver, public Mutex
 {
     friend class MsgWatcher;
+    friend class ExtMessage;
 public:
     enum {
 	RoleUnknown,
@@ -283,6 +284,7 @@
     ObjList m_relays;
     String m_trackName;
     String m_reason;
+    bool m_dumparray;
 };
 
 class ExtThread : public Thread
@@ -619,10 +621,44 @@
     return (m_msg.decode(s,m_ret,m_id) == -2);
 }
 
+static String escape(const char* str)
+{
+    String s;
+    if (TelEngine::null(str))
+	return s;
+    char c;
+    while ((c=*str++)) {
+	if (c == '\\' || c == '\t' || c == '\n')
+	    s += "\\";
+	s += c;
+    }
+    return s;
+}
+
+static String dumpArray(const Array *a)
+{
+    String r;
+    for (int j=0; j < a->getRows(); j++) {
+	for (int i=0; i<a->getColumns(); i++) {
+	    if(i)
+		r << "\t";
+	    const String* s = YOBJECT(String, a->get(i, j));
+	    if (s)
+		r << escape(*s);
+	}
+	r << "\n";
+    }
+    return r;
+}
 
 ExtMessage::~ExtMessage()
 {
     if (m_receiver) {
+	if(m_receiver->m_dumparray && userData()) {
+	    Array* a = static_cast<Array*>(userObject(YATOM("Array")));
+	    if(a)
+		retValue() = dumpArray(a);
+	}
 	m_receiver->returnMsg(this,m_id,m_accepted);
 	m_receiver->unuse();
     }
@@ -778,7 +814,8 @@
       m_chan(chan), m_watcher(0),
       m_selfWatch(false), m_reenter(false), m_setdata(true), m_writing(false),
       m_timeout(s_timeout), m_timebomb(s_timebomb), m_restart(false), m_scripted(false),
-      m_buffer(0,DEF_INCOMING_LINE), m_script(script), m_args(args), m_trackName(s_trackName)
+      m_buffer(0,DEF_INCOMING_LINE), m_script(script), m_args(args), m_trackName(s_trackName),
+      m_dumparray(false)
 {
     Debug(DebugAll,"ExtModReceiver::ExtModReceiver(\"%s\",\"%s\") [%p]",script,args,this);
     m_script.trimBlanks();
@@ -1569,6 +1606,11 @@
 		ok = val.null();
 		val = Engine::runId();
 	    }
+	    else if (id == "dumparray") {
+		m_dumparray = val.toBoolean(m_dumparray);
+		val = m_dumparray;
+		ok = true;
+	    }
 	    DDebug("ExtModReceiver",DebugAll,"Set '%s'='%s' %s",
 		id.c_str(),val.c_str(),ok ? "ok" : "failed");
 	    String out("%%<setlocal:");
Index: yate/docs/extmodule.html
===================================================================
--- yate.orig/docs/extmodule.html	2016-01-14 16:34:53.000000000 +0300
+++ yate/docs/extmodule.html	2016-01-15 16:35:16.000000000 +0300
@@ -200,6 +200,7 @@
 For read-only parameters you must provide an empty value.<br />
 <b>Currently supported parameters:</b><br />
 id (string) - Identifier of the associated channel, if any<br />
+scriptname (string) - Name of the script for logging purposes, especially useful for tcp-connected external scripts<br />
 disconnected (bool) - Enable or disable sending &quot;chan.disconnected&quot; messages<br />
 trackparam (string) - Set the message handler tracking name, cannot be made empty<br />
 reason (string) - Set the disconnect reason that gets received by the peer channel<br />
@@ -210,6 +211,8 @@
 reenter (bool) - If this module is allowed to handle messages generated by itself<br />
 selfwatch (bool) - If this module is allowed to watch messages generated by itself<br />
 restart (bool) - Restart this global module if it terminates unexpectedly. Must be turned off to allow normal termination<br />
+runid (bool,readonly) - Unique ID of the current running instance (See <code>runId()</code> in <a href="api/TelEngine__Engine.htm">API docs</a><br />
+dumparray (bool) - Enable arrays parsing into message result when received from database query<br />
 <b>Engine read-only run parameters:</b><br />
 engine.version (string,readonly) - Version of the engine, like &quot;2.0.1&quot;<br />
 engine.release (string,readonly) - Release type and number, like &quot;beta2&quot;<br />
