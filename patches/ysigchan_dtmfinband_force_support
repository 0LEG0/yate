Description: dtmfinband=force support in ysigchan
Author: vir@ctm.ru
---
Index: yate/modules/server/ysigchan.cpp
===================================================================
--- yate.orig/modules/server/ysigchan.cpp	2016-01-15 12:44:28.000000000 +0300
+++ yate/modules/server/ysigchan.cpp	2016-01-15 14:40:58.000000000 +0300
@@ -147,6 +147,7 @@
     bool m_hungup;                       // Hang up flag
     String m_reason;                     // Hangup reason
     bool m_inband;                       // True to try to send in-band tones
+    bool m_forceInband;                  // True to always send in-band tones
     bool m_ringback;                     // Always provide ringback media
     bool m_rtpForward;                   // Forward RTP
     bool m_sdpForward;                   // Forward SDP (only of rtp forward is enabled)
@@ -423,6 +424,8 @@
 	{ return m_controller; }
     inline bool inband() const
 	{ return m_inband; }
+    inline bool forceInband() const
+	{ return m_forceInband; }
     inline bool ringback() const
 	{ return m_ringback; }
     // Set exiting flag for call controller and timeout for the thread
@@ -472,6 +475,7 @@
     SignallingCallControl* m_controller; // Call controller, if any
     bool m_init;                         // True if already initialized
     bool m_inband;                       // True to send in-band tones through this trunk
+    bool m_forceInband;                  // True to always send in-band tones
     bool m_ringback;                     // Always provide ringback media
 private:
     Type m_type;                         // Trunk type
@@ -1109,6 +1113,7 @@
     m_hungup(true),
     m_reason("noconn"),
     m_inband(false),
+    m_forceInband(false),
     m_ringback(false),
     m_rtpForward(false),
     m_sdpForward(false),
@@ -1220,6 +1225,7 @@
 	return false;
     // Data
     m_inband = msg.getBoolValue("dtmfinband",trunk->inband());
+    m_forceInband = trunk->forceInband();
     m_ringback = msg.getBoolValue("ringback",trunk->ringback());
     // Make the call
     SignallingMessage* sigMsg = new SignallingMessage;
@@ -1413,9 +1419,10 @@
     }
     // Try to send: through the circuit, in band or through the signalling protocol
     SignallingCircuit* cic = getCircuit();
-    if (cic) {
+    if (cic && !m_forceInband) {
 	NamedList params("");
 	params.addParam("tone",tone);
+	params.addParam("dial",String::boolText(msg.getBoolValue("dial", false)));
 	if (cic->sendEvent(SignallingCircuitEvent::Dtmf,&params))
 	    return true;
     }
@@ -3423,6 +3430,7 @@
       m_controller(0),
       m_init(false),
       m_inband(false),
+      m_forceInband(false),
       m_ringback(false),
       m_type(type),
       m_thread(0)
@@ -3454,7 +3462,12 @@
 bool SigTrunk::initialize(NamedList& params)
 {
     // Reload common parameters
-    m_inband = params.getBoolValue("dtmfinband",s_cfg.getBoolValue("general","dtmfinband",false));
+    if(YSTRING("force") == params.getValue("dtmfinband", s_cfg.getValue("general","dtmfinband","false")))
+	m_inband = m_forceInband = true;
+    else {
+	m_inband = params.getBoolValue("dtmfinband",s_cfg.getBoolValue("general","dtmfinband",false));
+	m_forceInband = false;
+    }
     m_ringback = params.getBoolValue("ringback",s_cfg.getBoolValue("general","ringback",false));
 
     // Check error:
